1. P 類問題
P（Polynomial time）指的是可以在多項式時間內解決的決策問題（Decision Problems）。

定義：一個問題屬於 P，當且僅當有一個演算法能在輸入大小 
𝑛
n 的多項式時間 
𝑂
(
𝑛
𝑘
)
O(n 
k
 )（其中 
𝑘
k 是常數）內解決該問題。
直觀理解：P 是「易解問題」，即那些有高效演算法解決的問題。例如：
矩陣乘法
圖的最短路徑問題（如 Dijkstra 演算法）
整數排序（如快排、歸併排序）
特徵：

有效率高，適合實際應用。
適用於大量輸入。
2. NP 類問題
NP（Nondeterministic Polynomial time）是指能在多項式時間內驗證其解的決策問題。

定義：一個問題屬於 NP，當且僅當：

若給出一個候選解，能在多項式時間內驗證該解是否正確。
問題本身可以透過一種「猜測 + 驗證」的方式在多項式時間內完成。
直觀理解：

NP 是「易驗證問題」，即便求解困難，但一旦找到解，可以快速驗證其正確性。
如：
子集和問題（Subset Sum Problem）：給定一組整數，是否存在一個子集使其和等於某個目標值？
旅行推銷員問題（TSP） 的決策版本：是否存在一條路徑，其總成本不超過某個值？
特徵：

所有 P 問題都屬於 NP，因為若問題易解，那驗證自然也快。
NP 問題的解可能需要窮舉，但驗證不需要。
3. NP-Complete 問題
NP-Complete 是一組特殊的 NP 問題，被認為是「NP 中最困難的問題」。

定義：

問題屬於 NP。
所有其他 NP 問題都可以用多項式時間歸約（Reduction）到該問題上。
直觀理解：

若能解決任意一個 NP-Complete 問題，那麼所有 NP 問題都可以在多項式時間內解決。
是 NP 的「核心難題」。
例子：

布爾可滿足性問題（SAT）：是否存在一組變數賦值，使得布爾公式為真？
頂點覆蓋問題（Vertex Cover）：圖中是否存在一組頂點，其覆蓋所有邊，且數量不超過 
𝑘
k？
4. P = NP 問題
P vs NP 是計算理論中最著名且未解決的問題之一：

問題：P 是否等於 NP？

若 
𝑃
=
𝑁
𝑃
P=NP，則所有易驗證問題（NP）也可以有效地解決（P）。
若 
𝑃
≠
𝑁
𝑃
P

=NP，則存在一些問題能快速驗證解，但無法快速找到解。
直觀意義：

如果 
𝑃
=
𝑁
𝑃
P=NP，則所有 NP-Complete 問題都有高效的解法。
如果 
𝑃
≠
𝑁
𝑃
P

=NP，則 NP-Complete 問題在理論上無法高效解決。
重要性：

是計算理論的核心問題，解決它可以徹底改變密碼學、優化問題、人工智慧等領域。
關係圖
𝑃
⊆
𝑁
𝑃
P⊆NP：P 是 NP 的子集，因為易解問題自然易驗證。
𝑁
𝑃
−
𝐶
𝑜
𝑚
𝑝
𝑙
𝑒
𝑡
𝑒
⊆
𝑁
𝑃
NP−Complete⊆NP：NP-Complete 是 NP 的子集，但尚未確定是否包含於 P。
例子總結
問題類型	特徵	範例
P	易解 + 易驗證	排序問題、最短路徑問題
NP	易驗證	子集和問題、TSP 的決策版本
NP-Complete	易驗證 + NP 中最難	SAT 問題、圖著色問題